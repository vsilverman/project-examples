node {
    def server
    def rtGradle = Artifactory.newGradleBuild()
    def buildInfo = Artifactory.newBuildInfo()

    stage ('Clone') {
        git url: 'https://github.com/jfrog/project-examples.git'
    }

    stage ('Artifactory configuration') {
        // Obtain an Artifactory server instance, defined in Jenkins --> Manage Jenkins --> Configure System:
        server = Artifactory.server SERVER_ID

        rtGradle.tool = GRADLE_TOOL // Tool name from Jenkins configuration
        rtGradle.deployer repo: ARTIFACTORY_LOCAL_SNAPSHOT_REPO, server: server
        rtGradle.resolver repo: ARTIFACTORY_VIRTUAL_RELEASE_REPO, server: server
    }

    withEnv (['DONT_COLLECT=FOO']) {
        stage ('Config Build Info') {
            buildInfo.env.capture = true
            buildInfo.env.filter.addInclude ("*")
            buildInfo.env.filter.addExclude ("DONT_COLLECT*")
        }

        stage ('Extra gradle configurations') {
            rtGradle.deployer.artifactDeploymentPatterns.addExclude ("*.war")
            rtGradle.usesPlugin = true // Artifactory plugin already defined in build script
            rtGradle.useWrapper = true
        }

        stage ('Exec Gradle') {
            rtGradle.run rootDir: "gradle-examples/gradle-example/", buildFile: 'build.gradle', tasks: 'clean artifactoryPublish', buildInfo: buildInfo
        }

        stage ('Publish build info') {
            server.publishBuildInfo buildInfo
        }
    }
}



